// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  userId      String        @id @unique // Matches Supabase auth.users.id
  email       String        @unique
  role        ProfileRole   @default(SALES)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  isDeleted   Boolean       @default(false)
  Contact     Contact[]
  Interaction Interaction[]
  Company     Company[]

  @@map("profiles")
}

enum ProfileRole {
  SALES
  ADMIN
}

model Company {
  id        String    @id @default(uuid())
  name      String
  industry  String?
  owner     Profile   @relation(fields: [ownerId], references: [userId])
  ownerId   String
  contacts  Contact[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  isDeleted Boolean   @default(false)

  @@map("companies")
}

model Contact {
  id           String        @id @default(uuid())
  name         String
  email        String?       @unique
  phone        String?
  notes        String?
  company      Company?      @relation(fields: [companyId], references: [id])
  companyId    String?
  interactions Interaction[]
  owner        Profile       @relation(fields: [ownerId], references: [userId])
  ownerId      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  isDeleted    Boolean       @default(false)

  @@map("contacts")
}

model Interaction {
  id        String          @id @default(uuid())
  type      InteractionType
  notes     String
  contact   Contact         @relation(fields: [contactId], references: [id])
  contactId String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt
  owner     Profile         @relation(fields: [ownerId], references: [userId])
  ownerId   String

  @@map("interactions")
}

enum InteractionType {
  CALL
  EMAIL
  MEETING
  NOTE
}
